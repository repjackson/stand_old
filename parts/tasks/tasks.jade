template(name='tasks')
    .ui.stackable.padded.grid
        .row
            .four.wide.column
                .ui.header 
                    i.tasks.icon
                    |tasks
                .ui.icon.large.button.new_task
                    i.green.plus.icon
                +task_cloud
                with currentUser
                    .ui.list
                        .item(title='hours today')
                            i.sun.icon
                            i.clock.icon
                            | #{daily_hours}hrs
                        .item(title='weekly hours')
                            i.calendar.icon
                            i.clock.icon
                            | #{weekly_hours}hrs
                        .item(title='sessions today')
                            i.sun.icon
                            i.business.time.icon
                            | #{daily_sessions} sessions
                        .item(title='weekly sessions')
                            i.calendar.icon
                            i.business.time.icon
                            | #{weekly_sessions} sessions
            .six.wide.column
                //- with top_task
                //-     +task_card_template
                i.link.refresh.icon.refresh_my_time_stats
                .ui.small.compact.icon.button.toggle_complete(title='view complete' class=view_complete_class)
                    i.checkmark.icon
                //- .ui.small.compact.icon.button.toggle_incomplete(title='incomplete') 
                //-     i.circle.outline.icon
                |sort by 
                .ui.small.compact.button lucrative
                .ui.small.compact.button soonest
                .ui.small.compact.button priority
            
                .largescroll
                    .ui.segments
                        each tasks 
                            +task_card_template
            .six.wide.column
                if selected_task_doc
                    .ui.icon.right.floated.button.unselect_task
                        i.remove.icon
                    with selected_task_doc
                        +selected_task
                else 
                    .ui.small.button.new_task 
                        i.plus.icon
                        |new task 
                    i.refresh.link.icon.refresh_tasks_stats
                    with tasks_stats_doc
                        .ui.small.grey.header #{total_tasks} total tasks 
                        .ui.small.grey.header #{week_tasks_count} tasks this week
                        .ui.small.grey.header #{day_tasks_count} tasks today
                    
                    
                    

template(name='task_cloud')
    //- #task_cloud
        //- .ui.left.icon.input
        //-     i.search.icon
        //-     +inputAutocomplete settings=settings id="search" class="" autocomplete="off" 
        // .ui.hidden.fitted.divider
    i.grey.tags.icon
    if selected_tags
        #clear_tags.ui.active.icon.compact.button
            i.remove.icon
        each selected_tags
            .unselect_tag.ui.active.compact.button
                strong #{this}
    each all_tags
        .ui.compact.small.button.select_tag(class=task_cloud_tag_class) 
            strong #{this.name}




template(name='task_card_template')
    .ui.segment.pointer.select_task(class=task_segment_class)
        .ui.header.goto_task #{title}
        div
        .ui.horizontal.list 
            .item(title='views')
                i.eye.icon 
                |#{views}
            .item(title='points')
                i.thumbs.up.outline.icon
                |#{points}
            if task_list_id 
                .item(title='task list')
                    i.list.icon 
                    |#{task_list.title}
            .item
                i.grey.tags.icon 
                each five_tags
                    .ui.small.basic.label #{this}
        div
        if weight 
            .ui.small.inline.header #{weight} weight
        if assigned_by
            .ui.large.basic.label(title='assigned by')
                |#{assigned_by}
            .ui.small.inline.header ->
        if assigned_to
            .ui.large.basic.label(title='assigned to')
                |#{assigned_to}
        unless complete
            if percent_complete
                .rounded(style="height:5px;width:{{percent_complete}}%;background-color:grey" title="{{percent_complete}}% complete")
                    //- 
                    //- .ui.bottom.attached.progress(data-percent="{{percent_complete}}" title="{{percent_complete}}% complete")
                    //-     .bar
                        //- .progress
                    //- .label complete
    .spacer



template(name='selected_task')
    if editing_task 
        +text_edit key='title' direct=true
        +array_edit key='tags' direct=true
        div
        .ui.icon.large.button.save_task(title='save task') 
            i.checkmark.green.large.icon
        .ui.icon.small.button.delete_task(title='delete task') 
            i.remove.icon
    else 
        .ui.small.header #{title}
        +array_view key='tags' direct=true
        div
        .ui.icon.large.button.edit_task(title='edit task') 
            i.pencil.blue.icon
        .ui.icon.large.button.goto_task(title='view task') 
            i.right.chevron.large.icon
        div
        +voting_full


template(name='subscriptions')
    .ui.inline.grey.header 
        i.newspaper.small.icon
        |subscriptions
    if subscribed 
        .ui.icon.button.unsubscribe(title='unsubscribe')
            i.bell.slash.outline.icon
    else 
        .ui.icon.button.subscribe(title='subscribe')
            i.bell.outline.icon
    .ui.list
        each subscribers
            .item #{username}
